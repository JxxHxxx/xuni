plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

// Execution failed for task ':bootJar 이슈
bootJar.enabled = false

allprojects {
    repositories {
        mavenCentral()
    }
}

tasks.named('test') {
    useJUnitPlatform(
    )
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.jxx'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
    targetCompatibility = '17'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        //jpa
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        //lombok
        annotationProcessor 'org.projectlombok:lombok'
        compileOnly 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        //querydsl
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

    }

    test {
        useJUnitPlatform()
    }
}

project(':xuni-core') {

    bootJar { enabled = false }
    jar { enabled = true }

    dependencies {

        //database
        runtimeOnly 'com.mysql:mysql-connector-j'
        runtimeOnly 'com.h2database:h2'

        //actuator - prometheus
        implementation 'io.micrometer:micrometer-registry-prometheus'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        implementation 'org.springframework.boot:spring-boot-starter-aop'

    }
}

project(':xuni-api') {

    apply plugin: 'org.asciidoctor.jvm.convert'

    ext {
        snippetsDir = file('build/generated-snippets')
    }

    asciidoctor {
        inputs.dir snippetsDir
        configurations 'asciidoctorExtensions'
        dependsOn test
    }

    test {
        outputs.dir snippetsDir
    }

    bootJar {
        enabled = true
        dependsOn asciidoctor
        from ("${asciidoctor.outputDir}") {
            into 'static/docs'
        }
    }
    jar {
        enabled = false
    }

    configurations {
        asciidoctorExtensions
    }

    dependencies {
        implementation project(':xuni-core')
        //web
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        //cache
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'com.github.ben-manes.caffeine:caffeine:3.1.5'

        //jwt
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
        compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
        testImplementation  group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
        testImplementation  group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
        testImplementation  group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'

        //rest docs
        testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
        asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

        //aws - s3
        implementation 'software.amazon.awssdk.crt:aws-crt:0.21.1'
        implementation group: 'software.amazon.awssdk', name: 's3-transfer-manager', version: '2.19.17'
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

        //email
        implementation 'org.springframework.boot:spring-boot-starter-mail'
    }
}

project(':xuni-admin') {

    bootJar {
        enabled = true
    }
    jar {
        enabled = false
    }

    dependencies {
        implementation project(':xuni-core')
        //web
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':xuni-batch') {

    bootJar {
        enabled = true
    }
    jar {
        enabled = false
    }

    dependencies {
        implementation project(':xuni-core')

        //batch
        implementation 'org.springframework.boot:spring-boot-starter-batch'
        testImplementation 'org.springframework.batch:spring-batch-test'
    }
}
